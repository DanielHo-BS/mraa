name: Neuron Library Build Jobs.
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      ubuntu_distro:
        description: "Neuron Library Target Ubuntu Version. Could be `1804` or `2004`"
        required: true
        default: "2004"

jobs:
  build-neuron-library-arm64:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run on aarch64
        with:
          arch: aarch64
          distro: ubuntu18.04
          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}
          install: |
            apt update -q -y
            apt install -q -y git build-essential swig3.0 python-dev python3 python3-dev nodejs-dev cmake libjson-c-dev curl pkg-config
          run: |
            echo ${{env.RELEASE_VERSION}}
            cmake -B/tmp/build -H. -DBUILDSWIGNODE=OFF -DCMAKE_INSTALL_PREFIX=/opt/adlink/neuron-sdk/neuron-library/
            cmake --build /tmp/build --target package
            if [ -f "build/neuron-library_${{env.RELEASE_VERSION}}_arm64.deb" ]; then
              echo "\nRemove existing neuron-library deb files\n"
              curl -X DELETE http://website:10080/api/files/neuron-library
              echo "\nAdding package neuron-library debian package to local storage\n"
              curl -X POST -F file=@build/neuron-library_${{env.RELEASE_VERSION}}_arm64.deb http://website:10080/api/files/neuron-library
              sleep 0.5
              echo "Posting folder neuron-library to repo bionic-common"
              curl -X POST http://website:10080/api/repos/bionic-common/file/neuron-library?forceReplace=1
              sleep 0.5
              echo "Update publish"
              curl -X PUT -H 'Content-Type: application/json' --data '{"SourceKind":"local", "ForceOverwrite":true, "Signing":{"Batch":true,"Passphrase":"${{secrets.APTLY_GPG_KEY}}"}}' http://website:10080/api/publish/common/bionic
            fi
            rm -rf build

  build-neuron-library-x86:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name:
        run: |
          sudo apt-get update -q -y
          sudo apt-get install -q -y git build-essential swig3.0 python3-dev libnode-dev cmake libjson-c-dev curl pkg-config
          echo ${{env.RELEASE_VERSION}}
          cmake -B/tmp/build -H. -DBUILDSWIGNODE=OFF -DCMAKE_INSTALL_PREFIX=/opt/adlink/neuron-sdk/neuron-library/
          cmake --build /tmp/build --target package
          if [ -f "build/neuron-library_${{env.RELEASE_VERSION}}_amd64.deb" ]; then
            echo "\nRemove existing neuron-library debian package\n"
            curl -X DELETE http://website:10080/api/files/neuron-library
            echo "\nAdding package neuron-library debian package to local storage\n"
            curl -X POST -F file=@build/neuron-library_${{env.RELEASE_VERSION}}_amd64.deb http://website:10080/api/files/neuron-library
            sleep 0.5
            echo "Posting folder neuron-library to repo focal-common"
            curl -X POST http://website:10080/api/repos/focal-common/file/neuron-library?forceReplace=1
            sleep 0.5
            echo "Update publish"
            curl -X PUT -H 'Content-Type: application/json' --data '{"SourceKind":"local", "ForceOverwrite":true, "Signing":{"Batch":true,"Passphrase":"${{secrets.APTLY_GPG_KEY}}"}}' http://website:10080/api/publish/common/focal
          fi
          rm -rf build
